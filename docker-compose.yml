version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: x_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: x_service
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # Redis
  redis:
    image: redis:latest
    container_name: x_redis
    ports:
      - "6379:6379"

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: x_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Kafka (使用landoop/fast-data-dev镜像，包含Kafka和Zookeeper)
  kafka:
    image: landoop/fast-data-dev:latest
    container_name: x_kafka
    environment:
      ADV_HOST: localhost
    ports:
      - "9092:9092"
      - "2181:2181"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"

  # Nacos
  nacos:
    image: nacos/nacos-server:latest
    container_name: x_nacos
    environment:
      MODE: standalone
    ports:
      - "8848:8848"

  # IoTDB
  iotdb:
    image: apache/iotdb:latest
    container_name: x_iotdb
    ports:
      - "6667:6667"

  # MinIO
  minio:
    image: minio/minio:latest
    container_name: x_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"

  # 各个微服务
  manage-service:
    build: ./x-manage-service
    container_name: x_manage_service
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker

  repository-service:
    build: ./x-repository-service
    container_name: x_repository_service
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: docker

  config-center-service:
    build: ./x-config-center-service
    container_name: x_config_center_service
    ports:
      - "8082:8082"
    depends_on:
      - nacos
    environment:
      SPRING_PROFILES_ACTIVE: docker

  device-access-service:
    build: ./x-device-access-service
    container_name: x_device_access_service
    ports:
      - "8083:8083"
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker

  device-manage-service:
    build: ./x-device-manage-service
    container_name: x_device_manage_service
    ports:
      - "8084:8084"
    depends_on:
      - mysql
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: docker

  data-collection-service:
    build: ./x-data-collection-service
    container_name: x_data_collection_service
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - iotdb
    environment:
      SPRING_PROFILES_ACTIVE: docker

  data-sync-service:
    build: ./x-data-sync-service
    container_name: x_data_sync_service
    ports:
      - "8086:8086"
    depends_on:
      - iotdb
      - hadoop
    environment:
      SPRING_PROFILES_ACTIVE: docker

  api-gateway-service:
    build: ./x-api-gateway-service
    container_name: x_api_gateway_service
    ports:
      - "9000:9000"
    depends_on:
      - auth-service
    environment:
      SPRING_PROFILES_ACTIVE: docker

  auth-service:
    build: ./x-auth-service
    container_name: x_auth_service
    ports:
      - "8087:8087"
    depends_on:
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: docker

  realtime-analysis-service:
    build: ./x-realtime-analysis-service
    container_name: x_realtime_analysis_service
    ports:
      - "8088:8088"
    depends_on:
      - kafka
      - flink
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker

  offline-analysis-service:
    build: ./x-offline-analysis-service
    container_name: x_offline_analysis_service
    ports:
      - "8089:8089"
    depends_on:
      - hadoop
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: docker

  alert-notice-service:
    build: ./x-alert-notice-service
    container_name: x_alert_notice_service
    ports:
      - "8090:8090"
    depends_on:
      - mysql
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: docker

  task-scheduler-service:
    build: ./x-task-scheduler-service
    container_name: x_task_scheduler_service
    ports:
      - "8091:8091"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  file-service:
    build: ./x-file-service
    container_name: x_file_service
    ports:
      - "8092:8092"
    depends_on:
      - minio
    environment:
      SPRING_PROFILES_ACTIVE: docker

  # Hadoop
  hadoop:
    image: sequenceiq/hadoop-docker:2.7.1
    container_name: x_hadoop
    ports:
      - "50070:50070"
      - "8088:8088"

  # Flink
  flink:
    image: flink:latest
    container_name: x_flink
    ports:
      - "8081:8081"

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    container_name: x_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  mysql_data:
  mongodb_data: