syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.x.grpc.device";
option java_outer_classname = "DeviceServiceProto";

package device;

// 设备管理服务
service DeviceService {
  // 创建设备
  rpc CreateDevice (CreateDeviceRequest) returns (CreateDeviceResponse);
  
  // 获取设备信息
  rpc GetDevice (GetDeviceRequest) returns (GetDeviceResponse);
  
  // 更新设备状态
  rpc UpdateDeviceStatus (UpdateDeviceStatusRequest) returns (UpdateDeviceStatusResponse);
  
  // 删除设备
  rpc DeleteDevice (DeleteDeviceRequest) returns (DeleteDeviceResponse);
  
  // 获取设备列表
  rpc ListDevices (ListDevicesRequest) returns (ListDevicesResponse);
  
  // 通用操作执行
  rpc ExecuteOperation (ExecuteOperationRequest) returns (ExecuteOperationResponse);
}

// 设备信息
message Device {
  int64 id = 1;
  string name = 2;
  string model = 3;
  string status = 4;
  string location = 5;
  int64 create_time = 6;
  int64 update_time = 7;
}

// 创建设备请求
message CreateDeviceRequest {
  string name = 1;
  string model = 2;
  string status = 3;
  string location = 4;
}

// 创建设备响应
message CreateDeviceResponse {
  bool success = 1;
  string message = 2;
  Device device = 3;
}

// 获取设备请求
message GetDeviceRequest {
  int64 id = 1;
}

// 获取设备响应
message GetDeviceResponse {
  bool success = 1;
  string message = 2;
  Device device = 3;
}

// 更新设备状态请求
message UpdateDeviceStatusRequest {
  int64 id = 1;
  string status = 2;
}

// 更新设备状态响应
message UpdateDeviceStatusResponse {
  bool success = 1;
  string message = 2;
  Device device = 3;
}

// 删除设备请求
message DeleteDeviceRequest {
  int64 id = 1;
}

// 删除设备响应
message DeleteDeviceResponse {
  bool success = 1;
  string message = 2;
}

// 获取设备列表请求
message ListDevicesRequest {
  int32 page = 1;
  int32 size = 2;
  string status = 3;
}

// 获取设备列表响应
message ListDevicesResponse {
  bool success = 1;
  string message = 2;
  repeated Device devices = 3;
  int32 total = 4;
}

// 通用操作执行请求
message ExecuteOperationRequest {
  string operation = 1;
  map<string, string> params = 2;
}

// 通用操作执行响应
message ExecuteOperationResponse {
  bool success = 1;
  int32 code = 2;
  string message = 3;
  map<string, string> data = 4;
}